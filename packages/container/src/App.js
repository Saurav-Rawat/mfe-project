import React, { useState } from "react";
import Header from "./components/Header";
import { BrowserRouter, Route, Switch } from "react-router-dom";
import {
  StylesProvider,
  createGenerateClassName,
} from "@material-ui/core/styles";
import MarketingApp from "./components/MarketingApp";
import AuthApp from "./components/AuthApp";

//  we are using createGenerateClassName as we are using same styling library(material-ui) for container and
// marketing app so when in production we build the css for the application due to the use of same libraries,
// it is likely the css names generated by the library(css-in-js library is getting used inside material-ui so chances are high
// that we'll have a minified class name that could collide between container app and marketing app)
// for both the application could collide and result in conflicting css
// so we are using createGenerateClassName to prevent those classname collision
const generateClassName = createGenerateClassName({
  productionPrefix: "co", // container
});

export default () => {
  const [isSignedIn, setIsSignedIn] = useState(false);
  return (
    // browser router is behind the scenes using browser history we want to use browser history only in case of container app
    <BrowserRouter>
      <StylesProvider generateClassName={generateClassName}>
        <div>
          <Header
            onSignOut={() => setIsSignedIn(false)}
            isSignedIn={isSignedIn}
          />
          <Switch>
            <Route path="/auth">
              <AuthApp onSignIn={() => setIsSignedIn(true)} />
            </Route>
            <Route path="/">
              <MarketingApp onSignIn={() => setIsSignedIn(true)} />
            </Route>
          </Switch>
        </div>
      </StylesProvider>
    </BrowserRouter>
  );
};
